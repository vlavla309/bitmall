<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">
	<select id="getByOrderCode" resultType="ordervo" parameterType="string">
	<![CDATA[
	SELECT no, 
    	   code, 
    	   totalprice, 
	       o_name as 'ordererName', 
    	   o_phone1 as 'ordererPhone1', 
		   o_phone2 as 'ordererPhone2', 
	       o_email as 'ordererEmail',
	       o_addr as 'ordererAddr', 
 		   r_name as 'recipientName', 
 	       r_phone1 as 'recipientPhone1', 
	       r_phone2 as 'recipientPhone2', 
	       r_email as 'recipientEmail', 
	       r_addr as 'recipientAddr', 
	       requirement, 
	       status, 
 	       payment_type as 'paymentType', 
    	   reg_date  as 'regDate',
    	   member_no as 'memberNo'
	FROM   orders 
	WHERE  code = #{orderCode}; 
	]]>
	</select>
	
<select id="getListByParam" resultType="ordervo" parameterType="map">
SELECT a.no, 
       a.code, 
       a.totalprice, 
       a.o_name as 'ordererName', 
       a.o_phone1 as 'ordererPhone1', 
       a.o_phone2 as 'ordererPhone2', 
       a.o_email as 'ordererEmail', 
       a.o_addr as 'ordererAddr', 
       a.r_name as 'recipientName', 
       a.r_phone1 as 'recipientPhone1', 
       a.r_phone2 as 'recipientPhone2', 
       a.r_email as 'recipientEmail', 
       a.r_addr as 'recipientAddr', 
       a.requirement as 'requirement', 
       a.status, 
       a.payment_type as 'paymentType', 
       a.member_no as 'memberNo', 
       Date_format(a.reg_date, '%Y-%m-%d') as 'regDate' 
FROM   orders a, 
       order_item b, 
       product c 
<where>
	a.code = b.order_code 
	AND b.product_no = c.no 
	<choose>
		<when test="params.searchType == 'code'">
    		AND a.code LIKE #{params.searchValue}
    	</when>
    	<when test="params.searchType == 'orderer'">
    		AND a.o_name LIKE #{params.searchValue}
    	</when>
    	<when test="params.searchType == 'product'">
    		AND c.name LIKE #{params.searchValue}
    	</when>
    	<when test="params.searchType == 'member'">
    		AND a.member_no = #{params.searchValue}
    	</when>
	</choose>
	<if test="params.status != 'all'">
    <![CDATA[ AND a.status = #{params.status}]]>
    </if>
	<if test="params.beginDate != ''">
    <![CDATA[ AND Date_format(a.reg_date, '%Y-%m-%d') >= #{params.beginDate}]]>
    </if>
    <if test="params.endDate != ''">
    <![CDATA[ AND Date_format(a.reg_date, '%Y-%m-%d') <= #{params.endDate}]]>
    </if>
</where>
GROUP  BY a.code 
ORDER  BY a.reg_date DESC
LIMIT ${(params.pageNo-1) * orderPerPage}, ${orderPerPage}
</select>
	
<select id="getCountByParam" resultType="long" parameterType="map">
<![CDATA[
SELECT count(d.code)
FROM(SELECT count(a.code) as 'code',
	 Date_format(a.reg_date, '%Y-%m-%d') as 'regDate'
	 FROM   orders a, 
      		order_item b, 
       		product c 
]]>
	<where>
	a.code = b.order_code 
	AND b.product_no = c.no 
	<choose>
		<when test="params.searchType == 'code'">
    		AND a.code LIKE #{params.searchValue}
    	</when>
    	<when test="params.searchType == 'orderer'">
    		AND a.o_name LIKE #{params.searchValue}
    	</when>
    	<when test="params.searchType == 'product'">
    		AND c.name LIKE #{params.searchValue}
    	</when>
    	<when test="params.searchType == 'member'">
    		AND a.member_no = #{params.searchValue}
    	</when>
	</choose>
	<if test="params.status != 'all'">
    <![CDATA[ AND a.status = #{params.status}]]>
    </if>
	<if test="params.beginDate != ''">
    <![CDATA[ AND Date_format(a.reg_date, '%Y-%m-%d') >= #{params.beginDate}]]>
    </if>
    <if test="params.endDate != ''">
    <![CDATA[ AND Date_format(a.reg_date, '%Y-%m-%d') <= #{params.endDate}]]>
    </if>
</where>
	GROUP  BY a.code 
	ORDER  BY a.reg_date DESC) d
</select>
	

	
	<insert id ="insert" parameterType="ordervo" >
		<selectKey order="AFTER" keyProperty="no" resultType="long">
			SELECT last_insert_id()
		</selectKey>
	
		<![CDATA[
INSERT INTO orders 
            (code, 
             totalprice, 
             o_name, 
             o_phone1, 
             o_phone2, 
             o_email, 
             o_addr, 
             r_name, 
             r_phone1, 
             r_phone2, 
             r_email, 
             r_addr, 
             requirement, 
             status, 
             payment_type, 
             member_no, 
             reg_date) 
VALUES      (#{code}, 
             #{totalPrice}, 
             #{ordererName}, 
             #{ordererPhone1}, 
             #{ordererPhone2}, 
             #{ordererEmail}, 
             #{ordererAddr}, 
             #{recipientName}, 
             #{recipientPhone1}, 
             #{recipientPhone2}, 
             #{recipientEmail}, 
             #{recipientAddr}, 
             #{requirement}, 
             'submit', 
             #{paymentType}, 
             #{memberNo}, 
             sysdate()) 
             ]]>
	</insert>
	
	<update id="update" parameterType="ordervo">
	UPDATE orders 
	SET    totalprice = #{totalPrice}, 
    	   o_name = #{ordererName}, 
	       o_phone1 = #{ordererPhone1}, 
    	   o_phone2 = #{ordererPhone2}, 
	       o_email = #{ordererEmail}, 
	       o_addr = #{ordererAddr}, 
	       r_name = #{recipientName}, 
	       r_phone1 = #{recipientPhone1}, 
	       r_phone2 = #{recipientPhone2}, 
	       r_email = #{recipientEmail}, 
	       r_addr = #{recipientAddr}, 
	       requirement = #{requirement}, 
	       status = #{status}, 
	       payment_type = #{paymentType} 
	WHERE  no = #{no}
	</update>

</mapper>
